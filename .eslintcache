[{"/Users/boyang/code/react/fake-jira/src/index.tsx":"1","/Users/boyang/code/react/fake-jira/src/reportWebVitals.ts":"2","/Users/boyang/code/react/fake-jira/src/App.tsx":"3","/Users/boyang/code/react/fake-jira/src/tools/user.ts":"4","/Users/boyang/code/react/fake-jira/src/components/task-form/index.tsx":"5","/Users/boyang/code/react/fake-jira/src/components/project-form/index.tsx":"6","/Users/boyang/code/react/fake-jira/src/pages/login/index.tsx":"7","/Users/boyang/code/react/fake-jira/src/tools/localstorage.ts":"8","/Users/boyang/code/react/fake-jira/src/tools/react-query.ts":"9","/Users/boyang/code/react/fake-jira/src/tools/api.ts":"10","/Users/boyang/code/react/fake-jira/src/tools/request.ts":"11","/Users/boyang/code/react/fake-jira/src/components/loading/index.tsx":"12","/Users/boyang/code/react/fake-jira/src/router/projects-router/index.tsx":"13","/Users/boyang/code/react/fake-jira/src/pages/login/regist.tsx":"14","/Users/boyang/code/react/fake-jira/src/pages/login/login.tsx":"15","/Users/boyang/code/react/fake-jira/src/tools/task.ts":"16","/Users/boyang/code/react/fake-jira/src/tools/project.ts":"17","/Users/boyang/code/react/fake-jira/src/tools/alert.ts":"18","/Users/boyang/code/react/fake-jira/src/components/select/user-select.tsx":"19","/Users/boyang/code/react/fake-jira/src/components/select/task-type-select.tsx":"20","/Users/boyang/code/react/fake-jira/src/tools/list-config.ts":"21","/Users/boyang/code/react/fake-jira/src/hooks/use-title.ts":"22","/Users/boyang/code/react/fake-jira/src/components/select/use-select.ts":"23","/Users/boyang/code/react/fake-jira/src/router/projects-router/header/index.tsx":"24","/Users/boyang/code/react/fake-jira/src/hooks/use-params.ts":"25","/Users/boyang/code/react/fake-jira/src/pages/kanban/utils-task.ts":"26","/Users/boyang/code/react/fake-jira/src/router/tasks-router/index.tsx":"27","/Users/boyang/code/react/fake-jira/src/pages/projects/index.tsx":"28","/Users/boyang/code/react/fake-jira/src/pages/projects/search.tsx":"29","/Users/boyang/code/react/fake-jira/src/pages/projects/table.tsx":"30","/Users/boyang/code/react/fake-jira/src/tools/utils.ts":"31","/Users/boyang/code/react/fake-jira/src/router/tasks-router/menu/index.tsx":"32","/Users/boyang/code/react/fake-jira/src/pages/projects/save.tsx":"33","/Users/boyang/code/react/fake-jira/src/pages/projects/project-more.tsx":"34","/Users/boyang/code/react/fake-jira/src/pages/kanban/utils.ts":"35","/Users/boyang/code/react/fake-jira/src/pages/kanban/index.tsx":"36","/Users/boyang/code/react/fake-jira/src/pages/epic/index.tsx":"37","/Users/boyang/code/react/fake-jira/src/hooks/use-debounce.ts":"38","/Users/boyang/code/react/fake-jira/src/pages/kanban/utils-kanban.ts":"39","/Users/boyang/code/react/fake-jira/src/pages/kanban/kanban-column.tsx":"40","/Users/boyang/code/react/fake-jira/src/pages/kanban/kanban-add.tsx":"41","/Users/boyang/code/react/fake-jira/src/pages/kanban/search-task.tsx":"42","/Users/boyang/code/react/fake-jira/src/pages/kanban/kanban-more.tsx":"43","/Users/boyang/code/react/fake-jira/src/pages/kanban/task-add.tsx":"44","/Users/boyang/code/react/fake-jira/src/pages/kanban/task-card.tsx":"45","/Users/boyang/code/react/fake-jira/src/components/row/index.tsx":"46","/Users/boyang/code/react/fake-jira/src/components/hight-light/index.tsx":"47","/Users/boyang/code/react/fake-jira/src/components/drop/index.tsx":"48","/Users/boyang/code/react/fake-jira/src/components/drag/index.tsx":"49","/Users/boyang/code/react/fake-jira/src/router/projects-router/header/head-users.tsx":"50","/Users/boyang/code/react/fake-jira/src/router/projects-router/header/head-projects.tsx":"51","/Users/boyang/code/react/fake-jira/src/pages/epic/utils.ts":"52","/Users/boyang/code/react/fake-jira/src/pages/epic/epic-form.tsx":"53"},{"size":1128,"mtime":1627295501081,"results":"54","hashOfConfig":"55"},{"size":425,"mtime":1627295501088,"results":"56","hashOfConfig":"55"},{"size":446,"mtime":1627295501066,"results":"57","hashOfConfig":"55"},{"size":1826,"mtime":1627295501100,"results":"58","hashOfConfig":"55"},{"size":2453,"mtime":1627295501080,"results":"59","hashOfConfig":"55"},{"size":2346,"mtime":1627295501078,"results":"60","hashOfConfig":"55"},{"size":2255,"mtime":1627295501086,"results":"61","hashOfConfig":"55"},{"size":260,"mtime":1627295501091,"results":"62","hashOfConfig":"55"},{"size":243,"mtime":1627295501093,"results":"63","hashOfConfig":"55"},{"size":936,"mtime":1627295501090,"results":"64","hashOfConfig":"55"},{"size":1647,"mtime":1627295501098,"results":"65","hashOfConfig":"55"},{"size":452,"mtime":1627295501078,"results":"66","hashOfConfig":"55"},{"size":659,"mtime":1627295501089,"results":"67","hashOfConfig":"55"},{"size":1661,"mtime":1627295501087,"results":"68","hashOfConfig":"55"},{"size":1253,"mtime":1627295501086,"results":"69","hashOfConfig":"55"},{"size":2103,"mtime":1627295501099,"results":"70","hashOfConfig":"55"},{"size":2713,"mtime":1627295501091,"results":"71","hashOfConfig":"55"},{"size":330,"mtime":1627295501090,"results":"72","hashOfConfig":"55"},{"size":654,"mtime":1627295501080,"results":"73","hashOfConfig":"55"},{"size":735,"mtime":1627295501079,"results":"74","hashOfConfig":"55"},{"size":1519,"mtime":1627295501091,"results":"75","hashOfConfig":"55"},{"size":291,"mtime":1627295501081,"results":"76","hashOfConfig":"55"},{"size":557,"mtime":1627295501079,"results":"77","hashOfConfig":"55"},{"size":1275,"mtime":1627295501089,"results":"78","hashOfConfig":"55"},{"size":734,"mtime":1627295501081,"results":"79","hashOfConfig":"55"},{"size":3098,"mtime":1627295501084,"results":"80","hashOfConfig":"55"},{"size":987,"mtime":1627295501089,"results":"81","hashOfConfig":"55"},{"size":750,"mtime":1627295501087,"results":"82","hashOfConfig":"55"},{"size":980,"mtime":1627295501088,"results":"83","hashOfConfig":"55"},{"size":2286,"mtime":1627295501088,"results":"84","hashOfConfig":"55"},{"size":724,"mtime":1627295501100,"results":"85","hashOfConfig":"55"},{"size":736,"mtime":1627295501090,"results":"86","hashOfConfig":"55"},{"size":615,"mtime":1627295501087,"results":"87","hashOfConfig":"55"},{"size":887,"mtime":1627295501087,"results":"88","hashOfConfig":"55"},{"size":546,"mtime":1627295501084,"results":"89","hashOfConfig":"55"},{"size":3913,"mtime":1627295501082,"results":"90","hashOfConfig":"55"},{"size":1918,"mtime":1627295501082,"results":"91","hashOfConfig":"55"},{"size":466,"mtime":1627295501080,"results":"92","hashOfConfig":"55"},{"size":2902,"mtime":1627295501084,"results":"93","hashOfConfig":"55"},{"size":1929,"mtime":1627295501083,"results":"94","hashOfConfig":"55"},{"size":787,"mtime":1627295501083,"results":"95","hashOfConfig":"55"},{"size":1139,"mtime":1627295501083,"results":"96","hashOfConfig":"55"},{"size":650,"mtime":1627295501083,"results":"97","hashOfConfig":"55"},{"size":1305,"mtime":1627295501084,"results":"98","hashOfConfig":"55"},{"size":897,"mtime":1627295501084,"results":"99","hashOfConfig":"55"},{"size":613,"mtime":1627295501079,"results":"100","hashOfConfig":"55"},{"size":523,"mtime":1627295501078,"results":"101","hashOfConfig":"55"},{"size":1002,"mtime":1627295501077,"results":"102","hashOfConfig":"55"},{"size":917,"mtime":1627295501077,"results":"103","hashOfConfig":"55"},{"size":671,"mtime":1627295501089,"results":"104","hashOfConfig":"55"},{"size":928,"mtime":1627295501088,"results":"105","hashOfConfig":"55"},{"size":1484,"mtime":1627295501082,"results":"106","hashOfConfig":"55"},{"size":1839,"mtime":1627295501082,"results":"107","hashOfConfig":"55"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},"4nwnzg",{"filePath":"111","messages":"112","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"117","usedDeprecatedRules":"110"},{"filePath":"118","messages":"119","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"120","messages":"121","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"122","messages":"123","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"124","usedDeprecatedRules":"110"},{"filePath":"125","messages":"126","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"127","messages":"128","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"129","messages":"130","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"131","messages":"132","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"133","messages":"134","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"135","messages":"136","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"137","usedDeprecatedRules":"110"},{"filePath":"138","messages":"139","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"140","messages":"141","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"142","usedDeprecatedRules":"110"},{"filePath":"143","messages":"144","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"145","usedDeprecatedRules":"110"},{"filePath":"146","messages":"147","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"148","messages":"149","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"150","messages":"151","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"152","usedDeprecatedRules":"110"},{"filePath":"153","messages":"154","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"155","usedDeprecatedRules":"110"},{"filePath":"156","messages":"157","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"158","messages":"159","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"160","messages":"161","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"162","usedDeprecatedRules":"110"},{"filePath":"163","messages":"164","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"165","usedDeprecatedRules":"110"},{"filePath":"166","messages":"167","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"168","usedDeprecatedRules":"110"},{"filePath":"169","messages":"170","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"171","usedDeprecatedRules":"110"},{"filePath":"172","messages":"173","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"174","messages":"175","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"176","usedDeprecatedRules":"110"},{"filePath":"177","messages":"178","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"179","messages":"180","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"181","usedDeprecatedRules":"110"},{"filePath":"182","messages":"183","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"184","messages":"185","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"186","usedDeprecatedRules":"110"},{"filePath":"187","messages":"188","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"189","usedDeprecatedRules":"110"},{"filePath":"190","messages":"191","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"192","messages":"193","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"194","messages":"195","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"196","messages":"197","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"198","messages":"199","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"200","usedDeprecatedRules":"110"},{"filePath":"201","messages":"202","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"203","messages":"204","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"205","messages":"206","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"207","messages":"208","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"209","messages":"210","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"211","usedDeprecatedRules":"110"},{"filePath":"212","messages":"213","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"214","messages":"215","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"216","messages":"217","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"218","messages":"219","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"220","messages":"221","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"222","messages":"223","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"224","messages":"225","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"226","messages":"227","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"228","messages":"229","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"230","messages":"231","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},"/Users/boyang/code/react/fake-jira/src/index.tsx",[],["232","233"],"/Users/boyang/code/react/fake-jira/src/reportWebVitals.ts",[],"/Users/boyang/code/react/fake-jira/src/App.tsx",[],"/Users/boyang/code/react/fake-jira/src/tools/user.ts",["234"],"import { useMemo } from \"react\"\nimport { useMutation, useQuery, useQueryClient } from \"react-query\"\nimport { API, ILogin, IRegist } from \"./api\"\nimport { getToken, localStorageKey, saveToken } from \"./localstorage\"\nimport { queryKey } from \"./react-query\"\nimport { request, useHttp } from \"./request\"\n\nexport interface IUser {\n    id: number;\n    name: string;\n    email: string;\n    title: string;\n    organization: string;\n    token: string;\n}\n\nexport const register = async (data: IRegist) => {\n    const {user} = await request(API.register, {\n        method: 'POST',\n        data\n    })\n    saveToken(user.token)\n    return user\n}\n\nexport const login = async (data: ILogin) => {\n    const {user} = await request(API.login, {\n        method: 'POST',\n        data\n    })\n    saveToken(user.token)\n    return user\n}\n\nexport const logout = () => {\n    window.localStorage.removeItem(localStorageKey.token)\n    window.location.reload() // 重新加载页面\n}\n\nasync function getUserInfo() {\n    // 只有获取userInfo时才从localstorage中获取token\n    const token = getToken()\n    if(!token) return undefined\n    const res = await request(API.userInfo, {token})\n    return res.user\n}\n\nexport function useUser() {\n    return useQuery<IUser>(queryKey.userInfo, getUserInfo)\n}\n\nexport function useRegist() {\n    const client = useQueryClient()\n    return useMutation(register, {\n        onSuccess: () => client.invalidateQueries(queryKey.userInfo)\n    })\n}\n\nexport function useLogin() {\n    const client = useQueryClient()\n    return useMutation(login, {\n        onSuccess: () => client.invalidateQueries(queryKey.userInfo)\n    })\n}\n\nexport function useUsers() {\n    const http = useHttp()\n    async function getUsers() { \n        return await http(API.users)\n    }\n    return useQuery<IUser[]>(queryKey.users, getUsers)\n}\n","/Users/boyang/code/react/fake-jira/src/components/task-form/index.tsx",[],"/Users/boyang/code/react/fake-jira/src/components/project-form/index.tsx",[],"/Users/boyang/code/react/fake-jira/src/pages/login/index.tsx",["235"],"import styled from \"@emotion/styled\";\nimport { Card, Divider, Typography } from \"antd\";\nimport { FC, useMemo, useState } from \"react\";\nimport XLogin from \"./login\";\nimport logo from \"assets/logo.svg\"\nimport left from \"assets/left.svg\"\nimport right from \"assets/right.svg\"\nimport XRegist from \"./regist\";\n\nconst PUnlogin:FC = () => {\n    const [isRegist, setIsRegist] = useState(false)\n    const [error, setError] = useState<Error>()\n\n    const footerInfo = useMemo(() => {\n        return isRegist ? \"已经有账号了?直接登录\" : \"没有账号?注册新账号\"\n    }, [isRegist])\n\n    const title = useMemo(() => {\n        return isRegist ? \"注册\" : \"登录\"\n    }, [isRegist])\n\n    return <Content>\n        <div className=\"header\" />\n        <div className=\"bg\" />\n        <Card className='card' >\n            {\n                <h2 className=\"title\" >{title}</h2>\n            }{\n                error &&\n                <Typography.Text type=\"danger\" >{error.message}</Typography.Text>\n            }{\n                isRegist\n                ? <XRegist onError={setError} />\n                : <XLogin onError={setError} />\n            }\n            <Divider />\n            <a onClick={() => setIsRegist(!isRegist)} >\n                {footerInfo}\n            </a>\n        </Card>\n    </Content>\n}\nexport default PUnlogin\n\nexport const Content = styled.div`\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    min-height: 100vh;\n    .header {\n        background: url(${logo}) no-repeat center;\n        padding: 5rem 0;\n        background-size: 8rem;\n        width: 100%;\n    }\n    .card {\n        width: 40rem;\n        min-height: 56rem;\n        padding: 3.2rem 4rem;\n        border-radius: 0.3rem;\n        box-sizing: border-box;\n        box-shadow: rgba(0, 0, 0, 0.1) 0 0 10px;\n        text-align: center;\n    }\n    .bg {\n        position: absolute;\n        width: 100vw;\n        height: 100vh;\n        background-attachment: fixed;\n        background-repeat: no-repeat;\n        background-image: url(${left}), url(${right});\n        background-position: left bottom, right bottom;\n        background-size: calc((100vw/2) - 21rem);\n    }\n    .title {\n        margin-bottom: 2.4rem;\n        color: rgb(94, 108, 132);\n    }\n`","/Users/boyang/code/react/fake-jira/src/tools/localstorage.ts",[],"/Users/boyang/code/react/fake-jira/src/tools/react-query.ts",[],"/Users/boyang/code/react/fake-jira/src/tools/api.ts",[],"/Users/boyang/code/react/fake-jira/src/tools/request.ts",[],"/Users/boyang/code/react/fake-jira/src/components/loading/index.tsx",[],"/Users/boyang/code/react/fake-jira/src/router/projects-router/index.tsx",["236"],"import styled from \"@emotion/styled\";\nimport XKanban from \"pages/kanban\";\nimport XProjects from \"pages/projects\";\nimport { FC } from \"react\";\nimport { Navigate, Route, Routes } from \"react-router\";\nimport XTaskRouter from \"router/tasks-router\";\nimport XHeader from \"./header\";\n\nconst XProjectsRouter: FC = () => {\n    return <Content>\n        <XHeader />\n        <Routes>\n            <Route path=\"/projects\" element={<XProjects />} />\n            <Route path=\"/projects/:id/*\" element={<XTaskRouter />} />\n            <Navigate to=\"/projects\" replace={true} />\n        </Routes>\n    </Content>\n}\n\nexport default XProjectsRouter\n\nconst Content = styled.div`\n\n`","/Users/boyang/code/react/fake-jira/src/pages/login/regist.tsx",[],"/Users/boyang/code/react/fake-jira/src/pages/login/login.tsx",["237"],"import styled from \"@emotion/styled\";\nimport { Input, Form, Button, Divider } from \"antd\";\nimport { useTitle } from \"hooks/use-title\";\nimport React, { FC } from \"react\";\nimport { useLogin } from \"tools/user\";\n\ninterface IXLogin {\n    onError: (err: Error) => void\n}\n\ninterface ILoginForm {\n    username: string;\n    password: string;\n}\n\nconst XLogin:FC<IXLogin> = ({onError}) => {\n\n    useTitle(\"登录\")\n    const {mutateAsync: login, isLoading} = useLogin()\n\n    const onFinish = (data: ILoginForm) => {\n        login(data).catch(err => onError(err))\n    }\n\n    return <Content>\n        <Form onFinish={onFinish} >\n            <Form.Item name=\"username\" rules={[{required: true, message: '请输入用户名'}]} >\n                <Input placeholder=\"用户名\" />\n            </Form.Item>\n\n            <Form.Item name=\"password\" rules={[{required: true, message: '请输入密码'}]} >\n                <Input.Password placeholder=\"密码\" />\n            </Form.Item>\n\n            <Form.Item>\n                <Button className=\"btn\" type=\"primary\" htmlType=\"submit\" loading={isLoading} >登录</Button>\n            </Form.Item>\n        </Form>\n    </Content>\n}\n\nexport default XLogin\n\nconst Content = styled.div`\n    .btn {\n        width: 100%;\n    }\n`","/Users/boyang/code/react/fake-jira/src/tools/task.ts",["238"],"import { useTasksKey } from \"pages/kanban/utils-task\"\nimport { useMutation, useQuery } from \"react-query\"\nimport { API, IGetTasks } from \"./api\"\nimport { useAddConfig, useDeleteConfig, useEditConfig } from \"./list-config\"\nimport { queryKey } from \"./react-query\"\nimport { useHttp } from \"./request\"\n\nexport interface ITask {\n    id: number;\n    name: string;\n    // 经办人\n    processorId: number;\n    projectId: number;\n    // 任务组\n    epicId: number;\n    kanbanId: number;\n    // bug or task\n    typeId: number;\n    note: string;\n}\n/**\n * 获取tasks\n */\n export function useTasks() {\n    const http = useHttp()\n    const key = useTasksKey()\n    const data = key[1] as any\n    async function getTasks() {\n        const res = await http(API.tasks, {data})\n        return res\n    }\n    return useQuery<ITask[]>(key, getTasks)\n}\n/**\n * 添加task\n */\nexport function useAddTask() {\n    const http = useHttp()\n    const key = useTasksKey()\n    async function  addTask(params: Partial<ITask>) {\n        return await http(API.tasks, {\n            method: \"POST\",\n            data: params\n        })\n    }\n    return useMutation(addTask, useAddConfig(key))\n}\n/**\n * 编辑 task\n */\nexport function useEditTask() {\n    const http = useHttp()\n    const key = useTasksKey()\n    \n    async function editTask(params: Partial<ITask>) {\n        const res = await http(`${API.tasks}/${params.id}`, {\n            method: \"PATCH\",\n            data: params\n        })\n        return res\n    }\n    return useMutation(editTask, useEditConfig(key))\n}\n/**\n * 删除 task\n */\nexport function  useDeleteTask() {\n    const http = useHttp()\n    const key = useTasksKey()\n    async function deleteTask(params: Partial<ITask>) {\n        return await http(`${API.tasks}/${params.id}`, {\n            method: \"DELETE\"\n        })\n    }\n    return useMutation(deleteTask, useDeleteConfig(key))\n}\n/**\n * 获取tasks types\n */\nexport function  useTaskTypes() {\n    const http = useHttp()\n    async function getTaskTypes() {\n        return await http(API.taskTypes)\n    }\n    return useQuery([queryKey.taskTypes], getTaskTypes)\n}","/Users/boyang/code/react/fake-jira/src/tools/project.ts",[],"/Users/boyang/code/react/fake-jira/src/tools/alert.ts",[],"/Users/boyang/code/react/fake-jira/src/components/select/user-select.tsx",["239"],"import styled from \"@emotion/styled\";\nimport { Select } from \"antd\";\nimport { FC, useMemo } from \"react\";\nimport { useUsers } from \"tools/user\";\nimport { useSelect } from \"./use-select\";\n\ninterface IXUserSelect extends React.ComponentProps<typeof Select> {\n    \n}\n\nconst XUserSelect:FC<IXUserSelect> = (props) => {\n    const {data: users} = useUsers()\n\n    const {options, defaultValue} = useSelect(users)\n\n    return <Content \n        {...props}\n        value={props.value || defaultValue}\n        options={options} \n    />\n}\n\nexport default XUserSelect\n\nconst Content = styled(Select)`\n    .ant-select-selection-item {\n        text-align: left;\n    }\n`","/Users/boyang/code/react/fake-jira/src/components/select/task-type-select.tsx",["240","241"],"import styled from \"@emotion/styled\";\nimport { Select } from \"antd\";\nimport { FC, useMemo } from \"react\";\nimport { useTaskTypes } from \"tools/task\";\nimport { useUsers } from \"tools/user\";\nimport { useSelect } from \"./use-select\";\n\ninterface IXTaskTypeSelect extends React.ComponentProps<typeof Select> {\n    \n}\n\nconst XTaskTypeSelect:FC<IXTaskTypeSelect> = (props) => {\n    const {data: taskTypes} = useTaskTypes()\n\n    const {options, defaultValue} = useSelect(taskTypes, \"类型\")\n\n    return <Content \n        {...props}\n        value={props.value || defaultValue}\n        options={options} \n    />\n}\n\nexport default XTaskTypeSelect\n\nconst Content = styled(Select)`\n    .ant-select-selection-item {\n        text-align: left;\n    }\n`","/Users/boyang/code/react/fake-jira/src/tools/list-config.ts",[],"/Users/boyang/code/react/fake-jira/src/hooks/use-title.ts",[],"/Users/boyang/code/react/fake-jira/src/components/select/use-select.ts",["242"],"import { useMemo } from \"react\";\n\nexport function useSelect(options?: {name: string, id: number}[], defaultlabel=\"负责人\") {\n\n    const defaultValue = 0\n\n    const newOptions = useMemo(() => {\n        const defaultOption = {label: defaultlabel, value: defaultValue}\n        if(!options) return [defaultOption]\n        const arr = options?.map(user => ({\n            label: user.name,\n            value: user.id,\n        }))\n        return [ defaultOption, ...arr]\n    }, [options])\n\n    return {\n        options: newOptions,\n        defaultValue,\n    }\n}","/Users/boyang/code/react/fake-jira/src/router/projects-router/header/index.tsx",["243"],"import styled from \"@emotion/styled\"\nimport { FC } from \"react\"\nimport {ReactComponent as Logo} from \"assets/logo.svg\"\nimport { Dropdown, Menu } from \"antd\"\nimport { logout, useUser, useUsers } from \"tools/user\"\nimport XHeadUsers from \"./head-users\"\nimport XHeadProject from \"./head-projects\"\n\nconst XHeader:FC = () => {\n\n    const {data: userInfo} = useUser()\n    const {data: users} = useUsers()\n\n    function toHome() {\n        window.location.pathname = \"\"\n    }\n\n    const UserMenu = <Menu style={{textAlign: \"center\"}} >\n        <Menu.Item key=\"logout\" onClick={logout} >登出</Menu.Item>\n    </Menu>\n\n    return <Content>\n        <div onClick={toHome} ><Logo/></div>\n        <XHeadProject />\n        <XHeadUsers />\n        <div></div>\n        <Dropdown overlay={UserMenu} placement=\"bottomCenter\" arrow >\n            <span>Hi, {userInfo?.name}</span>\n        </Dropdown>\n    </Content>\n}\n\nexport default XHeader\n\nconst Content = styled.div`\n    padding: 0 3.5rem;\n    height: 6rem;\n    background-color: #fff;\n    display: grid;\n    grid-template-rows: 1fr;\n    grid-template-columns: 8rem 100px 100px 1fr 100px;\n    box-shadow: 0 0 5px 0 rgba(0, 0, 0, 0.1) inset;\n    > * {\n        display: flex;\n        justify-content: center;\n        align-items: center;\n    }\n`","/Users/boyang/code/react/fake-jira/src/hooks/use-params.ts",["244"],"import { useMemo } from \"react\"\nimport { URLSearchParamsInit, useSearchParams } from \"react-router-dom\"\nimport { cleanObj } from \"tools/utils\"\n\nexport function useUrlParams<K extends string>(keys: K[]) {\n        \n    const [searchParams, setSearchParams] = useSearchParams()\n\n    const params = useMemo(() => {\n        return keys.reduce((pre, key) => ({\n            ...pre,\n            [key]: searchParams.get(key)\n        }), {} as {[x in K]: string})\n    }, [searchParams])\n\n    const setParams = (obj: Partial<{[x in K]: any}>) => {\n        let o = cleanObj({\n            ...Object.fromEntries(searchParams),\n            ...obj,\n        }) as URLSearchParamsInit\n        setSearchParams(o)\n    }\n\n    return {params, setParams}\n}\n","/Users/boyang/code/react/fake-jira/src/pages/kanban/utils-task.ts",["245"],"import { useDebounce } from \"hooks/use-debounce\"\nimport { useUrlParams } from \"hooks/use-params\"\nimport { useMemo } from \"react\"\nimport { useMutation, useQueryClient } from \"react-query\"\nimport { API, ISort } from \"tools/api\"\nimport { queryKey } from \"tools/react-query\"\nimport { useHttp } from \"tools/request\"\nimport { ITask } from \"tools/task\"\nimport { cleanObj } from \"tools/utils\"\nimport { moveIitem, useProjectIdInUrl } from \"./utils\"\n\nexport function useTasksParam() {\n    const {params, setParams} = useUrlParams([\"name\", \"processorId\", \"typeId\", \"tagId\"])\n    const projectId = useProjectIdInUrl()\n\n    const data = useMemo(() => {\n        return {\n            ...params,\n            projectId,\n            processorId: Number(params.processorId) || undefined,\n            typeId: Number(params.typeId) || undefined,\n            tagId: Number(params.tagId) || undefined,\n        }\n    }, [params, projectId])\n\n    function reset() {\n        setParams({\n            name: undefined,\n            processorId: undefined,\n            typeId: undefined,\n            tagId: undefined,\n        })\n    }\n\n    return {\n        params: data,\n        setParams,\n        reset,\n    }\n}\n\nexport function useTasksKey() {\n    const {params} = useTasksParam()\n    const p = useDebounce(params)\n\n    const key = useMemo(() => {\n        return [queryKey.tasks, cleanObj(params)]\n    }, [p])\n\n    return key\n}\n\nexport function useReorderTask() {\n    const http = useHttp()\n    const tasksKey = useTasksKey()\n    const queryClient = useQueryClient()\n    async function reorderTask(params:ISort) {\n        const res = await http(API.tasksReorder, {\n            data: params,\n            method: \"POST\"\n        })\n        return res\n    }\n    return useMutation(reorderTask, {\n        onMutate(params: ISort) {\n            const preTasks = queryClient.getQueryData(tasksKey) as ITask[]\n            const newTasks = sortTask(preTasks, params)\n            queryClient.setQueryData(tasksKey, newTasks)\n            return preTasks\n        },\n        // onSuccess() {\n        //     queryClient.invalidateQueries(tasksKey)\n        // },\n        onError(err: Error, param: any, preDate: any) {\n            queryClient.setQueryData(tasksKey, preDate)\n        }\n    })\n}\n\nfunction sortTask(tasks: ITask[], params: ISort) {\n    tasks = [...tasks]\n    const taskIds = tasks.map(item => item.id)\n    const fromIndex = taskIds.indexOf(params.fromId)\n    const toIndex = taskIds.indexOf(params.referenceId)\n    tasks[fromIndex].kanbanId = Number(params.toKanbanId)\n    return moveIitem(tasks, fromIndex, toIndex, params.type)\n}\n/**\n * \n */\ntype AfterBefor = \"after\" | 'before'\ninterface IGetTypeTask {\n    arr: any[];\n    fromIndex: number;\n    toIndex: number;\n    fromKanbanId: number;\n    toKanbanId: number;\n}\nexport function  getTypeTask( param: IGetTypeTask ): AfterBefor {\n    const { arr, fromKanbanId, fromIndex, toKanbanId, toIndex } = param\n    if(fromKanbanId === toKanbanId) {\n        return fromIndex < toIndex ? \"after\" : \"before\"\n    }\n    if(arr[toIndex]) {\n        return \"before\"\n    }\n    return \"after\"\n}","/Users/boyang/code/react/fake-jira/src/router/tasks-router/index.tsx",[],"/Users/boyang/code/react/fake-jira/src/pages/projects/index.tsx",["246"],"import styled from \"@emotion/styled\";\nimport { Button, Row } from \"antd\";\nimport { useTitle } from \"hooks/use-title\";\nimport { FC, useEffect } from \"react\";\nimport AlertModel from \"tools/alert\";\nimport XSearch from \"./search\";\nimport XTableProjects from \"./table\";\n\nconst XProjects: FC = () => {\n\n    useTitle(\"项目列表\")\n\n    return <Content>\n        <Row justify=\"space-between\" align=\"middle\" className=\"raw\" >\n            <h1>项目列表</h1>\n            <Button type=\"link\" onClick={() => AlertModel.projectForm()} >创建项目</Button>\n        </Row>\n        <XSearch />\n        <XTableProjects />\n    </Content>\n}\n\nexport default XProjects\n\nconst Content = styled.div`\n    padding: 3.2rem;\n    .raw {\n        margin-bottom: 2rem;\n    }\n`","/Users/boyang/code/react/fake-jira/src/pages/projects/search.tsx",[],"/Users/boyang/code/react/fake-jira/src/pages/projects/table.tsx",["247","248","249"],"import { render } from \"@testing-library/react\";\nimport { Spin, Table } from \"antd\";\nimport { ColumnsType } from \"antd/lib/table\";\nimport dayjs from \"dayjs\";\nimport React, { FC, useEffect, useMemo } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { IProject, useProjects } from \"tools/project\";\nimport { useUsers } from \"tools/user\";\nimport XProjectMore from \"./project-more\";\nimport XSaveProject from \"./save\";\n\nconst XTableProjects:FC = () => {\n\n    const { data: projects, isLoading } = useProjects()\n    const { data: users } = useUsers()\n\n    const dataSource = useMemo(() => {\n        if(!projects) return []\n        return projects.map(item => ({\n            ...item,\n            key: item.id\n        }))\n    }, [projects])\n\n    const Columns: ColumnsType<any> = [\n        {\n            title: <XSaveProject project={{pin: true}} />,\n            dataIndex: \"pin\",\n            key: \"pin\",\n            render(value, project) {\n                return <XSaveProject project={project} />\n            }\n        },{\n            title: \"项目名称\",\n            dataIndex: \"name\",\n            key: \"name\",\n            render(value, project) {\n                return <Link to={`/projects/${Number(project.id)}`} >{value}</Link>\n            }\n        },{\n            title: \"部门\",\n            dataIndex: \"organization\",\n            key: \"organization\",\n        },{\n            title: \"负责人\",\n            dataIndex: \"administrator\",\n            key: \"administrator\",\n            render(value, project: IProject) {\n                const user = users?.find(user => user.id === project.personId)\n                return user?.name || '未知'\n            }\n        },{\n            title: \"创建时间\",\n            dataIndex: \"created\",\n            key: \"created\",\n            render(value) {\n                const time = value || new Date()\n                return dayjs(time).format(\"YYYY-MM-DD\")\n            }\n        },{\n            title: \"编辑\",\n            dataIndex: \"edit\",\n            key: \"edit\",\n            render(value, project) {\n                return <XProjectMore project={project} />\n            }\n        }\n    ]\n\n    return <Table columns={Columns} dataSource={dataSource} pagination={false} loading={isLoading} />\n}\n\nexport default XTableProjects","/Users/boyang/code/react/fake-jira/src/tools/utils.ts",[],"/Users/boyang/code/react/fake-jira/src/router/tasks-router/menu/index.tsx",["250","251"],"import styled from \"@emotion/styled\";\nimport { Menu } from \"antd\";\nimport React, { FC, useEffect, useState } from \"react\";\nimport { Link, useLocation } from \"react-router-dom\";\n\nfunction useRouteKey() {\n    const arr = useLocation().pathname.split(\"/\")\n    return arr[arr.length-1]\n}\n\nconst XMenu:FC = () => {\n\n    const key = useRouteKey()\n\n    return <Content mode=\"inline\" selectedKeys={[key]} >\n        <Menu.Item key=\"kanban\" >\n            <Link to=\"kanban\" >看板</Link>\n        </Menu.Item>\n        <Menu.Item key=\"epic\">\n            <Link to=\"epic\" >任务组</Link>\n        </Menu.Item>\n    </Content>\n}\n\nexport default XMenu\n\nconst Content = styled(Menu)`\n    height: 100%;\n    .ant-menu-item {\n        margin-top: 0;\n    }\n`","/Users/boyang/code/react/fake-jira/src/pages/projects/save.tsx",["252"],"import { Rate } from \"antd\";\nimport { FC, useMemo, useState } from \"react\";\nimport { IProject, useEditProject } from \"tools/project\";\n\ninterface IXSaveProject {\n    project: Partial<IProject>\n}\n\nconst XSaveProject:FC<IXSaveProject> = ({project}) => {\n\n    const { mutateAsync: saveProject } = useEditProject()\n\n    const value = useMemo(() => {\n        return project.pin ? 1 : 0\n    }, [project.pin])\n\n    function onTap(v: number) {\n        saveProject({\n            id: project.id,\n            pin: !!v\n        })\n    }\n\n    return <Rate value={value} count={1} onChange={onTap} />\n}\n\nexport default XSaveProject","/Users/boyang/code/react/fake-jira/src/pages/projects/project-more.tsx",[],"/Users/boyang/code/react/fake-jira/src/pages/kanban/utils.ts",[],"/Users/boyang/code/react/fake-jira/src/pages/kanban/index.tsx",[],"/Users/boyang/code/react/fake-jira/src/pages/epic/index.tsx",[],"/Users/boyang/code/react/fake-jira/src/hooks/use-debounce.ts",["253"],"import { useEffect, useRef, useState } from \"react\";\n\nexport const useDebounce = <V>(value: V, delay=300) => {\n    const [debouncedValue, setDebouncedValue] = useState(value)\n    const prev = useRef(value)\n    useEffect(() => {\n        const timer = setTimeout(() => {\n            setDebouncedValue(value)\n        }, delay)\n        return () => {\n            prev.current = value\n            clearTimeout(timer)\n        }\n    }, [value])\n\n    return debouncedValue\n}","/Users/boyang/code/react/fake-jira/src/pages/kanban/utils-kanban.ts",[],"/Users/boyang/code/react/fake-jira/src/pages/kanban/kanban-column.tsx",[],"/Users/boyang/code/react/fake-jira/src/pages/kanban/kanban-add.tsx",[],"/Users/boyang/code/react/fake-jira/src/pages/kanban/search-task.tsx",[],"/Users/boyang/code/react/fake-jira/src/pages/kanban/kanban-more.tsx",["254"],"import { Button, Dropdown, Menu } from \"antd\";\nimport { FC } from \"react\";\nimport { IKanban } from \"tools/kanban\";\nimport { useDeleteProject } from \"tools/project\";\nimport { useDeleteKanban } from \"./utils-kanban\";\n\ninterface IXKanbanMore {\n    kanban: IKanban\n}\n\nconst XKanbanMore:FC<IXKanbanMore> = ({kanban}) => {\n\n    const { mutate } = useDeleteKanban()\n\n    function deleteKanban() {\n        mutate(kanban)\n    }\n\n    const MENU = <Menu>\n        <Menu.Item onClick={deleteKanban} >删除</Menu.Item>\n    </Menu>\n\n    return <Dropdown overlay={MENU} arrow >\n        <Button type=\"link\" >...</Button>\n    </Dropdown>\n}\n\nexport default XKanbanMore","/Users/boyang/code/react/fake-jira/src/pages/kanban/task-add.tsx",[],"/Users/boyang/code/react/fake-jira/src/pages/kanban/task-card.tsx",[],"/Users/boyang/code/react/fake-jira/src/components/row/index.tsx",[],"/Users/boyang/code/react/fake-jira/src/components/hight-light/index.tsx",[],"/Users/boyang/code/react/fake-jira/src/components/drop/index.tsx",[],"/Users/boyang/code/react/fake-jira/src/components/drag/index.tsx",[],"/Users/boyang/code/react/fake-jira/src/router/projects-router/header/head-users.tsx",[],"/Users/boyang/code/react/fake-jira/src/router/projects-router/header/head-projects.tsx",[],"/Users/boyang/code/react/fake-jira/src/pages/epic/utils.ts",[],"/Users/boyang/code/react/fake-jira/src/pages/epic/epic-form.tsx",[],{"ruleId":"255","replacedBy":"256"},{"ruleId":"257","replacedBy":"258"},{"ruleId":"259","severity":1,"message":"260","line":1,"column":10,"nodeType":"261","messageId":"262","endLine":1,"endColumn":17},{"ruleId":"263","severity":1,"message":"264","line":37,"column":13,"nodeType":"265","endLine":37,"endColumn":56},{"ruleId":"259","severity":1,"message":"266","line":2,"column":8,"nodeType":"261","messageId":"262","endLine":2,"endColumn":15},{"ruleId":"259","severity":1,"message":"267","line":2,"column":31,"nodeType":"261","messageId":"262","endLine":2,"endColumn":38},{"ruleId":"259","severity":1,"message":"268","line":3,"column":15,"nodeType":"261","messageId":"262","endLine":3,"endColumn":24},{"ruleId":"259","severity":1,"message":"260","line":3,"column":14,"nodeType":"261","messageId":"262","endLine":3,"endColumn":21},{"ruleId":"259","severity":1,"message":"260","line":3,"column":14,"nodeType":"261","messageId":"262","endLine":3,"endColumn":21},{"ruleId":"259","severity":1,"message":"269","line":5,"column":10,"nodeType":"261","messageId":"262","endLine":5,"endColumn":18},{"ruleId":"270","severity":1,"message":"271","line":15,"column":8,"nodeType":"272","endLine":15,"endColumn":17,"suggestions":"273"},{"ruleId":"259","severity":1,"message":"274","line":12,"column":18,"nodeType":"261","messageId":"262","endLine":12,"endColumn":23},{"ruleId":"270","severity":1,"message":"275","line":14,"column":8,"nodeType":"272","endLine":14,"endColumn":22,"suggestions":"276"},{"ruleId":"270","severity":1,"message":"277","line":48,"column":8,"nodeType":"272","endLine":48,"endColumn":11,"suggestions":"278"},{"ruleId":"259","severity":1,"message":"279","line":4,"column":14,"nodeType":"261","messageId":"262","endLine":4,"endColumn":23},{"ruleId":"259","severity":1,"message":"280","line":1,"column":10,"nodeType":"261","messageId":"262","endLine":1,"endColumn":16},{"ruleId":"259","severity":1,"message":"281","line":2,"column":10,"nodeType":"261","messageId":"262","endLine":2,"endColumn":14},{"ruleId":"259","severity":1,"message":"279","line":5,"column":21,"nodeType":"261","messageId":"262","endLine":5,"endColumn":30},{"ruleId":"259","severity":1,"message":"279","line":3,"column":21,"nodeType":"261","messageId":"262","endLine":3,"endColumn":30},{"ruleId":"259","severity":1,"message":"282","line":3,"column":32,"nodeType":"261","messageId":"262","endLine":3,"endColumn":40},{"ruleId":"259","severity":1,"message":"282","line":2,"column":23,"nodeType":"261","messageId":"262","endLine":2,"endColumn":31},{"ruleId":"270","severity":1,"message":"283","line":14,"column":8,"nodeType":"272","endLine":14,"endColumn":15,"suggestions":"284"},{"ruleId":"259","severity":1,"message":"285","line":4,"column":10,"nodeType":"261","messageId":"262","endLine":4,"endColumn":26},"no-native-reassign",["286"],"no-negated-in-lhs",["287"],"@typescript-eslint/no-unused-vars","'useMemo' is defined but never used.","Identifier","unusedVar","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","'XKanban' is defined but never used.","'Divider' is defined but never used.","'IGetTasks' is defined but never used.","'useUsers' is defined but never used.","react-hooks/exhaustive-deps","React Hook useMemo has a missing dependency: 'defaultlabel'. Either include it or remove the dependency array.","ArrayExpression",["288"],"'users' is assigned a value but never used.","React Hook useMemo has a missing dependency: 'keys'. Either include it or remove the dependency array.",["289"],"React Hook useMemo has a missing dependency: 'params'. Either include it or remove the dependency array.",["290"],"'useEffect' is defined but never used.","'render' is defined but never used.","'Spin' is defined but never used.","'useState' is defined but never used.","React Hook useEffect has a missing dependency: 'delay'. Either include it or remove the dependency array.",["291"],"'useDeleteProject' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"292","fix":"293"},{"desc":"294","fix":"295"},{"desc":"296","fix":"297"},{"desc":"298","fix":"299"},"Update the dependencies array to be: [defaultlabel, options]",{"range":"300","text":"301"},"Update the dependencies array to be: [keys, searchParams]",{"range":"302","text":"303"},"Update the dependencies array to be: [params]",{"range":"304","text":"305"},"Update the dependencies array to be: [delay, value]",{"range":"306","text":"307"},[468,477],"[defaultlabel, options]",[461,475],"[keys, searchParams]",[1376,1379],"[params]",[429,436],"[delay, value]"]