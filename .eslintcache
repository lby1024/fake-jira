[{"/Users/boyang/code/react/fake-jira/src/index.tsx":"1","/Users/boyang/code/react/fake-jira/src/reportWebVitals.ts":"2","/Users/boyang/code/react/fake-jira/src/App.tsx":"3","/Users/boyang/code/react/fake-jira/src/tools/user.ts":"4","/Users/boyang/code/react/fake-jira/src/tools/react-query.ts":"5","/Users/boyang/code/react/fake-jira/src/tools/request.ts":"6","/Users/boyang/code/react/fake-jira/src/tools/localstorage.ts":"7","/Users/boyang/code/react/fake-jira/src/pages/login/index.tsx":"8","/Users/boyang/code/react/fake-jira/src/pages/login/login.tsx":"9","/Users/boyang/code/react/fake-jira/src/pages/login/regist.tsx":"10","/Users/boyang/code/react/fake-jira/src/tools/api.ts":"11","/Users/boyang/code/react/fake-jira/src/components/loading/index.tsx":"12","/Users/boyang/code/react/fake-jira/src/router/projects-router/index.tsx":"13","/Users/boyang/code/react/fake-jira/src/pages/projects/index.tsx":"14","/Users/boyang/code/react/fake-jira/src/pages/kanban/index.tsx":"15","/Users/boyang/code/react/fake-jira/src/router/projects-router/header/index.tsx":"16","/Users/boyang/code/react/fake-jira/src/hooks/use-params.ts":"17","/Users/boyang/code/react/fake-jira/src/tools/utils.ts":"18"},{"size":909,"mtime":1621022516566,"results":"19","hashOfConfig":"20"},{"size":425,"mtime":1620981622055,"results":"21","hashOfConfig":"20"},{"size":454,"mtime":1621172373649,"results":"22","hashOfConfig":"20"},{"size":1627,"mtime":1621097603003,"results":"23","hashOfConfig":"20"},{"size":51,"mtime":1621084710918,"results":"24","hashOfConfig":"20"},{"size":1633,"mtime":1621096371938,"results":"25","hashOfConfig":"20"},{"size":260,"mtime":1621084807440,"results":"26","hashOfConfig":"20"},{"size":2255,"mtime":1621090232069,"results":"27","hashOfConfig":"20"},{"size":1186,"mtime":1621098104044,"results":"28","hashOfConfig":"20"},{"size":1594,"mtime":1621095456141,"results":"29","hashOfConfig":"20"},{"size":253,"mtime":1621087190992,"results":"30","hashOfConfig":"20"},{"size":452,"mtime":1621171514403,"results":"31","hashOfConfig":"20"},{"size":608,"mtime":1621175465577,"results":"32","hashOfConfig":"20"},{"size":753,"mtime":1621186404403,"results":"33","hashOfConfig":"20"},{"size":110,"mtime":1621172773266,"results":"34","hashOfConfig":"20"},{"size":1064,"mtime":1621187454118,"results":"35","hashOfConfig":"20"},{"size":757,"mtime":1621186760252,"results":"36","hashOfConfig":"20"},{"size":453,"mtime":1621185033102,"results":"37","hashOfConfig":"20"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},"4nwnzg",{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"45","messages":"46","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"47","usedDeprecatedRules":"40"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"56","usedDeprecatedRules":"40"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"59","usedDeprecatedRules":"40"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"68","messages":"69","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"74","messages":"75","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/boyang/code/react/fake-jira/src/index.tsx",[],["78","79"],"/Users/boyang/code/react/fake-jira/src/reportWebVitals.ts",[],"/Users/boyang/code/react/fake-jira/src/App.tsx",["80"],"/Users/boyang/code/react/fake-jira/src/tools/user.ts",["81"],"import { useMemo } from \"react\"\nimport { useMutation, useQuery, useQueryClient } from \"react-query\"\nimport { API, ILogin, IRegist } from \"./api\"\nimport { getToken, localStorageKey, saveToken } from \"./localstorage\"\nimport { queryKey } from \"./react-query\"\nimport { request } from \"./request\"\n\nexport interface IUser {\n    id: number;\n    name: string;\n    email: string;\n    title: string;\n    organization: string;\n    token: string;\n}\n\nexport const register = async (data: IRegist) => {\n    const {user} = await request(API.register, {\n        method: 'POST',\n        data\n    })\n    saveToken(user.token)\n    return user\n}\n\nexport const login = async (data: ILogin) => {\n    const {user} = await request(API.login, {\n        method: 'POST',\n        data\n    })\n    saveToken(user.token)\n    return user\n}\n\nexport const logout = () => {\n    window.localStorage.removeItem(localStorageKey.token)\n    window.location.reload() // 重新加载页面\n}\n\nasync function getUserInfo() {\n    // 只有获取userInfo时才从localstorage中获取token\n    const token = getToken()\n    if(!token) return undefined\n    const res = await request(API.userInfo, {token})\n    return res.user\n}\n\nexport function useUser() {\n    return useQuery<IUser>(queryKey.userInfo, getUserInfo)\n}\n\nexport function useRegist() {\n    const client = useQueryClient()\n    return useMutation(register, {\n        onSuccess: () => client.invalidateQueries(queryKey.userInfo)\n    })\n}\n\nexport function useLogin() {\n    const client = useQueryClient()\n    return useMutation(login, {\n        onSuccess: () => client.invalidateQueries(queryKey.userInfo)\n    })\n}\n","/Users/boyang/code/react/fake-jira/src/tools/react-query.ts",[],"/Users/boyang/code/react/fake-jira/src/tools/request.ts",[],"/Users/boyang/code/react/fake-jira/src/tools/localstorage.ts",[],"/Users/boyang/code/react/fake-jira/src/pages/login/index.tsx",["82"],"import styled from \"@emotion/styled\";\nimport { Card, Divider, Typography } from \"antd\";\nimport { FC, useMemo, useState } from \"react\";\nimport XLogin from \"./login\";\nimport logo from \"assets/logo.svg\"\nimport left from \"assets/left.svg\"\nimport right from \"assets/right.svg\"\nimport XRegist from \"./regist\";\n\nconst PUnlogin:FC = () => {\n    const [isRegist, setIsRegist] = useState(false)\n    const [error, setError] = useState<Error>()\n\n    const footerInfo = useMemo(() => {\n        return isRegist ? \"已经有账号了?直接登录\" : \"没有账号?注册新账号\"\n    }, [isRegist])\n\n    const title = useMemo(() => {\n        return isRegist ? \"注册\" : \"登录\"\n    }, [isRegist])\n\n    return <Content>\n        <div className=\"header\" />\n        <div className=\"bg\" />\n        <Card className='card' >\n            {\n                <h2 className=\"title\" >{title}</h2>\n            }{\n                error &&\n                <Typography.Text type=\"danger\" >{error.message}</Typography.Text>\n            }{\n                isRegist\n                ? <XRegist onError={setError} />\n                : <XLogin onError={setError} />\n            }\n            <Divider />\n            <a onClick={() => setIsRegist(!isRegist)} >\n                {footerInfo}\n            </a>\n        </Card>\n    </Content>\n}\nexport default PUnlogin\n\nexport const Content = styled.div`\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    min-height: 100vh;\n    .header {\n        background: url(${logo}) no-repeat center;\n        padding: 5rem 0;\n        background-size: 8rem;\n        width: 100%;\n    }\n    .card {\n        width: 40rem;\n        min-height: 56rem;\n        padding: 3.2rem 4rem;\n        border-radius: 0.3rem;\n        box-sizing: border-box;\n        box-shadow: rgba(0, 0, 0, 0.1) 0 0 10px;\n        text-align: center;\n    }\n    .bg {\n        position: absolute;\n        width: 100vw;\n        height: 100vh;\n        background-attachment: fixed;\n        background-repeat: no-repeat;\n        background-image: url(${left}), url(${right});\n        background-position: left bottom, right bottom;\n        background-size: calc((100vw/2) - 21rem);\n    }\n    .title {\n        margin-bottom: 2.4rem;\n        color: rgb(94, 108, 132);\n    }\n`","/Users/boyang/code/react/fake-jira/src/pages/login/login.tsx",["83"],"import styled from \"@emotion/styled\";\nimport { Input, Form, Button, Divider } from \"antd\";\nimport React, { FC } from \"react\";\nimport { useLogin } from \"tools/user\";\n\ninterface IXLogin {\n    onError: (err: Error) => void\n}\n\ninterface ILoginForm {\n    username: string;\n    password: string;\n}\n\nconst XLogin:FC<IXLogin> = ({onError}) => {\n\n    const {mutateAsync: login, isLoading} = useLogin()\n\n    const onFinish = (data: ILoginForm) => {\n        login(data).catch(err => onError(err))\n    }\n\n    return <Content>\n        <Form onFinish={onFinish} >\n            <Form.Item name=\"username\" rules={[{required: true, message: '请输入用户名'}]} >\n                <Input placeholder=\"用户名\" />\n            </Form.Item>\n\n            <Form.Item name=\"password\" rules={[{required: true, message: '请输入密码'}]} >\n                <Input.Password placeholder=\"密码\" />\n            </Form.Item>\n\n            <Form.Item>\n                <Button className=\"btn\" type=\"primary\" htmlType=\"submit\" loading={isLoading} >登录</Button>\n            </Form.Item>\n        </Form>\n    </Content>\n}\n\nexport default XLogin\n\nconst Content = styled.div`\n    .btn {\n        width: 100%;\n    }\n`","/Users/boyang/code/react/fake-jira/src/pages/login/regist.tsx",[],"/Users/boyang/code/react/fake-jira/src/tools/api.ts",[],"/Users/boyang/code/react/fake-jira/src/components/loading/index.tsx",[],"/Users/boyang/code/react/fake-jira/src/router/projects-router/index.tsx",[],"/Users/boyang/code/react/fake-jira/src/pages/projects/index.tsx",["84"],"/Users/boyang/code/react/fake-jira/src/pages/kanban/index.tsx",[],"/Users/boyang/code/react/fake-jira/src/router/projects-router/header/index.tsx",[],"/Users/boyang/code/react/fake-jira/src/hooks/use-params.ts",["85"],"/Users/boyang/code/react/fake-jira/src/tools/utils.ts",[],{"ruleId":"86","replacedBy":"87"},{"ruleId":"88","replacedBy":"89"},{"ruleId":"90","severity":1,"message":"91","line":3,"column":10,"nodeType":"92","messageId":"93","endLine":3,"endColumn":16},{"ruleId":"90","severity":1,"message":"94","line":1,"column":10,"nodeType":"92","messageId":"93","endLine":1,"endColumn":17},{"ruleId":"95","severity":1,"message":"96","line":37,"column":13,"nodeType":"97","endLine":37,"endColumn":56},{"ruleId":"90","severity":1,"message":"98","line":2,"column":31,"nodeType":"92","messageId":"93","endLine":2,"endColumn":38},{"ruleId":"99","severity":1,"message":"100","line":18,"column":8,"nodeType":"101","endLine":18,"endColumn":10,"suggestions":"102"},{"ruleId":"99","severity":1,"message":"103","line":16,"column":8,"nodeType":"101","endLine":16,"endColumn":14,"suggestions":"104"},"no-native-reassign",["105"],"no-negated-in-lhs",["106"],"@typescript-eslint/no-unused-vars","'logout' is defined but never used.","Identifier","unusedVar","'useMemo' is defined but never used.","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","'Divider' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'params' and 'setParams'. Either include them or remove the dependency array.","ArrayExpression",["107"],"React Hook useMemo has a missing dependency: 'searchParams'. Either include it or remove the dependency array.",["108"],"no-global-assign","no-unsafe-negation",{"desc":"109","fix":"110"},{"desc":"111","fix":"112"},"Update the dependencies array to be: [params, setParams]",{"range":"113","text":"114"},"Update the dependencies array to be: [keys, searchParams]",{"range":"115","text":"116"},[447,449],"[params, setParams]",[546,552],"[keys, searchParams]"]