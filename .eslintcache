[{"/Users/boyang/code/react/fake-jira/src/index.tsx":"1","/Users/boyang/code/react/fake-jira/src/reportWebVitals.ts":"2","/Users/boyang/code/react/fake-jira/src/App.tsx":"3","/Users/boyang/code/react/fake-jira/src/tools/user.ts":"4","/Users/boyang/code/react/fake-jira/src/components/project-form/index.tsx":"5","/Users/boyang/code/react/fake-jira/src/pages/login/index.tsx":"6","/Users/boyang/code/react/fake-jira/src/tools/api.ts":"7","/Users/boyang/code/react/fake-jira/src/tools/localstorage.ts":"8","/Users/boyang/code/react/fake-jira/src/tools/react-query.ts":"9","/Users/boyang/code/react/fake-jira/src/tools/request.ts":"10","/Users/boyang/code/react/fake-jira/src/components/loading/index.tsx":"11","/Users/boyang/code/react/fake-jira/src/router/projects-router/index.tsx":"12","/Users/boyang/code/react/fake-jira/src/pages/login/login.tsx":"13","/Users/boyang/code/react/fake-jira/src/pages/login/regist.tsx":"14","/Users/boyang/code/react/fake-jira/src/tools/alert.ts":"15","/Users/boyang/code/react/fake-jira/src/components/select/user-select.tsx":"16","/Users/boyang/code/react/fake-jira/src/hooks/use-title.ts":"17","/Users/boyang/code/react/fake-jira/src/router/projects-router/header/index.tsx":"18","/Users/boyang/code/react/fake-jira/src/pages/projects/index.tsx":"19","/Users/boyang/code/react/fake-jira/src/pages/kanban/index.tsx":"20","/Users/boyang/code/react/fake-jira/src/pages/projects/search.tsx":"21","/Users/boyang/code/react/fake-jira/src/pages/projects/table.tsx":"22","/Users/boyang/code/react/fake-jira/src/pages/projects/save.tsx":"23","/Users/boyang/code/react/fake-jira/src/pages/projects/project-more.tsx":"24","/Users/boyang/code/react/fake-jira/src/tools/project.ts":"25","/Users/boyang/code/react/fake-jira/src/tools/list-config.ts":"26","/Users/boyang/code/react/fake-jira/src/hooks/use-params.ts":"27","/Users/boyang/code/react/fake-jira/src/hooks/use-debounce.ts":"28","/Users/boyang/code/react/fake-jira/src/tools/utils.ts":"29","/Users/boyang/code/react/fake-jira/src/components/select/use-select.ts":"30"},{"size":996,"mtime":1621328161759,"results":"31","hashOfConfig":"32"},{"size":425,"mtime":1620981622055,"results":"33","hashOfConfig":"32"},{"size":454,"mtime":1621328161747,"results":"34","hashOfConfig":"32"},{"size":1826,"mtime":1621328161763,"results":"35","hashOfConfig":"32"},{"size":2346,"mtime":1621330405484,"results":"36","hashOfConfig":"32"},{"size":2255,"mtime":1621328161760,"results":"37","hashOfConfig":"32"},{"size":341,"mtime":1621328161761,"results":"38","hashOfConfig":"32"},{"size":260,"mtime":1621328161762,"results":"39","hashOfConfig":"32"},{"size":100,"mtime":1621328161762,"results":"40","hashOfConfig":"32"},{"size":1634,"mtime":1621328161762,"results":"41","hashOfConfig":"32"},{"size":452,"mtime":1621328161755,"results":"42","hashOfConfig":"32"},{"size":608,"mtime":1621328161761,"results":"43","hashOfConfig":"32"},{"size":1253,"mtime":1621328161760,"results":"44","hashOfConfig":"32"},{"size":1661,"mtime":1621328161760,"results":"45","hashOfConfig":"32"},{"size":145,"mtime":1621328161761,"results":"46","hashOfConfig":"32"},{"size":654,"mtime":1621328161757,"results":"47","hashOfConfig":"32"},{"size":291,"mtime":1621328161758,"results":"48","hashOfConfig":"32"},{"size":1064,"mtime":1621328161761,"results":"49","hashOfConfig":"32"},{"size":750,"mtime":1621344246082,"results":"50","hashOfConfig":"32"},{"size":154,"mtime":1621328161759,"results":"51","hashOfConfig":"32"},{"size":969,"mtime":1621345712840,"results":"52","hashOfConfig":"32"},{"size":2068,"mtime":1621329246180,"results":"53","hashOfConfig":"32"},{"size":615,"mtime":1621328161760,"results":"54","hashOfConfig":"32"},{"size":887,"mtime":1621332554878,"results":"55","hashOfConfig":"32"},{"size":2459,"mtime":1621331255328,"results":"56","hashOfConfig":"32"},{"size":1374,"mtime":1621331411309,"results":"57","hashOfConfig":"32"},{"size":774,"mtime":1621328161758,"results":"58","hashOfConfig":"32"},{"size":315,"mtime":1621328161757,"results":"59","hashOfConfig":"32"},{"size":453,"mtime":1621328161763,"results":"60","hashOfConfig":"32"},{"size":587,"mtime":1621345550290,"results":"61","hashOfConfig":"32"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},"4nwnzg",{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"71","usedDeprecatedRules":"64"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"76","usedDeprecatedRules":"64"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"91","usedDeprecatedRules":"64"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"98","usedDeprecatedRules":"64"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"105","messages":"106","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"107","usedDeprecatedRules":"64"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"110","messages":"111","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"112","usedDeprecatedRules":"64"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"115","usedDeprecatedRules":"64"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"118","messages":"119","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"120","usedDeprecatedRules":"64"},{"filePath":"121","messages":"122","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"123","messages":"124","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"125","usedDeprecatedRules":"64"},{"filePath":"126","messages":"127","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"128","usedDeprecatedRules":"64"},{"filePath":"129","messages":"130","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"131","messages":"132","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/boyang/code/react/fake-jira/src/index.tsx",[],["133","134"],"/Users/boyang/code/react/fake-jira/src/reportWebVitals.ts",[],"/Users/boyang/code/react/fake-jira/src/App.tsx",[],"/Users/boyang/code/react/fake-jira/src/tools/user.ts",["135"],"import { useMemo } from \"react\"\nimport { useMutation, useQuery, useQueryClient } from \"react-query\"\nimport { API, ILogin, IRegist } from \"./api\"\nimport { getToken, localStorageKey, saveToken } from \"./localstorage\"\nimport { queryKey } from \"./react-query\"\nimport { request, useHttp } from \"./request\"\n\nexport interface IUser {\n    id: number;\n    name: string;\n    email: string;\n    title: string;\n    organization: string;\n    token: string;\n}\n\nexport const register = async (data: IRegist) => {\n    const {user} = await request(API.register, {\n        method: 'POST',\n        data\n    })\n    saveToken(user.token)\n    return user\n}\n\nexport const login = async (data: ILogin) => {\n    const {user} = await request(API.login, {\n        method: 'POST',\n        data\n    })\n    saveToken(user.token)\n    return user\n}\n\nexport const logout = () => {\n    window.localStorage.removeItem(localStorageKey.token)\n    window.location.reload() // 重新加载页面\n}\n\nasync function getUserInfo() {\n    // 只有获取userInfo时才从localstorage中获取token\n    const token = getToken()\n    if(!token) return undefined\n    const res = await request(API.userInfo, {token})\n    return res.user\n}\n\nexport function useUser() {\n    return useQuery<IUser>(queryKey.userInfo, getUserInfo)\n}\n\nexport function useRegist() {\n    const client = useQueryClient()\n    return useMutation(register, {\n        onSuccess: () => client.invalidateQueries(queryKey.userInfo)\n    })\n}\n\nexport function useLogin() {\n    const client = useQueryClient()\n    return useMutation(login, {\n        onSuccess: () => client.invalidateQueries(queryKey.userInfo)\n    })\n}\n\nexport function useUsers() {\n    const http = useHttp()\n    async function getUsers() { \n        return await http(API.users)\n    }\n    return useQuery<IUser[]>(queryKey.users, getUsers)\n}\n","/Users/boyang/code/react/fake-jira/src/components/project-form/index.tsx",[],"/Users/boyang/code/react/fake-jira/src/pages/login/index.tsx",["136"],"import styled from \"@emotion/styled\";\nimport { Card, Divider, Typography } from \"antd\";\nimport { FC, useMemo, useState } from \"react\";\nimport XLogin from \"./login\";\nimport logo from \"assets/logo.svg\"\nimport left from \"assets/left.svg\"\nimport right from \"assets/right.svg\"\nimport XRegist from \"./regist\";\n\nconst PUnlogin:FC = () => {\n    const [isRegist, setIsRegist] = useState(false)\n    const [error, setError] = useState<Error>()\n\n    const footerInfo = useMemo(() => {\n        return isRegist ? \"已经有账号了?直接登录\" : \"没有账号?注册新账号\"\n    }, [isRegist])\n\n    const title = useMemo(() => {\n        return isRegist ? \"注册\" : \"登录\"\n    }, [isRegist])\n\n    return <Content>\n        <div className=\"header\" />\n        <div className=\"bg\" />\n        <Card className='card' >\n            {\n                <h2 className=\"title\" >{title}</h2>\n            }{\n                error &&\n                <Typography.Text type=\"danger\" >{error.message}</Typography.Text>\n            }{\n                isRegist\n                ? <XRegist onError={setError} />\n                : <XLogin onError={setError} />\n            }\n            <Divider />\n            <a onClick={() => setIsRegist(!isRegist)} >\n                {footerInfo}\n            </a>\n        </Card>\n    </Content>\n}\nexport default PUnlogin\n\nexport const Content = styled.div`\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    min-height: 100vh;\n    .header {\n        background: url(${logo}) no-repeat center;\n        padding: 5rem 0;\n        background-size: 8rem;\n        width: 100%;\n    }\n    .card {\n        width: 40rem;\n        min-height: 56rem;\n        padding: 3.2rem 4rem;\n        border-radius: 0.3rem;\n        box-sizing: border-box;\n        box-shadow: rgba(0, 0, 0, 0.1) 0 0 10px;\n        text-align: center;\n    }\n    .bg {\n        position: absolute;\n        width: 100vw;\n        height: 100vh;\n        background-attachment: fixed;\n        background-repeat: no-repeat;\n        background-image: url(${left}), url(${right});\n        background-position: left bottom, right bottom;\n        background-size: calc((100vw/2) - 21rem);\n    }\n    .title {\n        margin-bottom: 2.4rem;\n        color: rgb(94, 108, 132);\n    }\n`","/Users/boyang/code/react/fake-jira/src/tools/api.ts",[],"/Users/boyang/code/react/fake-jira/src/tools/localstorage.ts",[],"/Users/boyang/code/react/fake-jira/src/tools/react-query.ts",[],"/Users/boyang/code/react/fake-jira/src/tools/request.ts",[],"/Users/boyang/code/react/fake-jira/src/components/loading/index.tsx",[],"/Users/boyang/code/react/fake-jira/src/router/projects-router/index.tsx",[],"/Users/boyang/code/react/fake-jira/src/pages/login/login.tsx",["137"],"import styled from \"@emotion/styled\";\nimport { Input, Form, Button, Divider } from \"antd\";\nimport { useTitle } from \"hooks/use-title\";\nimport React, { FC } from \"react\";\nimport { useLogin } from \"tools/user\";\n\ninterface IXLogin {\n    onError: (err: Error) => void\n}\n\ninterface ILoginForm {\n    username: string;\n    password: string;\n}\n\nconst XLogin:FC<IXLogin> = ({onError}) => {\n\n    useTitle(\"登录\")\n    const {mutateAsync: login, isLoading} = useLogin()\n\n    const onFinish = (data: ILoginForm) => {\n        login(data).catch(err => onError(err))\n    }\n\n    return <Content>\n        <Form onFinish={onFinish} >\n            <Form.Item name=\"username\" rules={[{required: true, message: '请输入用户名'}]} >\n                <Input placeholder=\"用户名\" />\n            </Form.Item>\n\n            <Form.Item name=\"password\" rules={[{required: true, message: '请输入密码'}]} >\n                <Input.Password placeholder=\"密码\" />\n            </Form.Item>\n\n            <Form.Item>\n                <Button className=\"btn\" type=\"primary\" htmlType=\"submit\" loading={isLoading} >登录</Button>\n            </Form.Item>\n        </Form>\n    </Content>\n}\n\nexport default XLogin\n\nconst Content = styled.div`\n    .btn {\n        width: 100%;\n    }\n`","/Users/boyang/code/react/fake-jira/src/pages/login/regist.tsx",[],"/Users/boyang/code/react/fake-jira/src/tools/alert.ts",[],"/Users/boyang/code/react/fake-jira/src/components/select/user-select.tsx",["138"],"import styled from \"@emotion/styled\";\nimport { Select } from \"antd\";\nimport { FC, useMemo } from \"react\";\nimport { useUsers } from \"tools/user\";\nimport { useSelect } from \"./use-select\";\n\ninterface IXUserSelect extends React.ComponentProps<typeof Select> {\n    \n}\n\nconst XUserSelect:FC<IXUserSelect> = (props) => {\n    const {data: users} = useUsers()\n\n    const {options, defaultValue} = useSelect(users)\n\n    return <Content \n        {...props}\n        value={props.value || defaultValue}\n        options={options} \n    />\n}\n\nexport default XUserSelect\n\nconst Content = styled(Select)`\n    .ant-select-selection-item {\n        text-align: left;\n    }\n`","/Users/boyang/code/react/fake-jira/src/hooks/use-title.ts",[],"/Users/boyang/code/react/fake-jira/src/router/projects-router/header/index.tsx",[],"/Users/boyang/code/react/fake-jira/src/pages/projects/index.tsx",["139"],"/Users/boyang/code/react/fake-jira/src/pages/kanban/index.tsx",["140"],"import { useTitle } from \"hooks/use-title\";\nimport { FC } from \"react\";\n\nconst XKanban:FC = () => {\n    return <div>kanban</div>\n}\n\nexport default XKanban","/Users/boyang/code/react/fake-jira/src/pages/projects/search.tsx",[],"/Users/boyang/code/react/fake-jira/src/pages/projects/table.tsx",["141","142"],"import { Spin, Table } from \"antd\";\nimport { ColumnsType } from \"antd/lib/table\";\nimport dayjs from \"dayjs\";\nimport { FC, useEffect, useMemo } from \"react\";\nimport { IProject, useProjects } from \"tools/project\";\nimport { useUsers } from \"tools/user\";\nimport XProjectMore from \"./project-more\";\nimport XSaveProject from \"./save\";\n\nconst XTableProjects:FC = () => {\n\n    const { data: projects, isLoading } = useProjects()\n    const { data: users } = useUsers()\n\n    const dataSource = useMemo(() => {\n        if(!projects) return []\n        return projects.map(item => ({\n            ...item,\n            key: item.id || +new Date()\n        }))\n    }, [projects])\n\n    const Columns: ColumnsType<any> = [\n        {\n            title: <XSaveProject project={{pin: true}} />,\n            dataIndex: \"pin\",\n            key: \"pin\",\n            render(value, project) {\n                return <XSaveProject project={project} />\n            }\n        },{\n            title: \"项目名称\",\n            dataIndex: \"name\",\n            key: \"name\"\n        },{\n            title: \"部门\",\n            dataIndex: \"organization\",\n            key: \"organization\",\n        },{\n            title: \"负责人\",\n            dataIndex: \"administrator\",\n            key: \"administrator\",\n            render(value, project: IProject) {\n                const user = users?.find(user => user.id === project.personId)\n                return user?.name || '未知'\n            }\n        },{\n            title: \"创建时间\",\n            dataIndex: \"created\",\n            key: \"created\",\n            render(value) {\n                const time = value || new Date()\n                return dayjs(time).format(\"YYYY-MM-DD\")\n            }\n        },{\n            title: \"编辑\",\n            dataIndex: \"edit\",\n            key: \"edit\",\n            render(value, project) {\n                return <XProjectMore project={project} />\n            }\n        }\n    ]\n\n    return <Table columns={Columns} dataSource={dataSource} pagination={false} loading={isLoading} />\n}\n\nexport default XTableProjects","/Users/boyang/code/react/fake-jira/src/pages/projects/save.tsx",["143"],"import { Rate } from \"antd\";\nimport { FC, useMemo, useState } from \"react\";\nimport { IProject, useEditProject } from \"tools/project\";\n\ninterface IXSaveProject {\n    project: Partial<IProject>\n}\n\nconst XSaveProject:FC<IXSaveProject> = ({project}) => {\n\n    const { mutateAsync: saveProject } = useEditProject()\n\n    const value = useMemo(() => {\n        return project.pin ? 1 : 0\n    }, [project.pin])\n\n    function onTap(v: number) {\n        saveProject({\n            id: project.id,\n            pin: !!v\n        })\n    }\n\n    return <Rate value={value} count={1} onChange={onTap} />\n}\n\nexport default XSaveProject","/Users/boyang/code/react/fake-jira/src/pages/projects/project-more.tsx",[],"/Users/boyang/code/react/fake-jira/src/tools/project.ts",["144"],"import { useDebounce } from \"hooks/use-debounce\"\nimport { useUrlParams } from \"hooks/use-params\"\nimport { useMemo } from \"react\"\nimport { useMutation, useQuery } from \"react-query\"\nimport { API } from \"./api\"\nimport { useAddConfig, useDeleteConfig, useEditConfig } from \"./list-config\"\nimport { queryKey } from \"./react-query\"\nimport { useHttp } from \"./request\"\n\nexport interface IProject {\n    id: number;\n    name: string;\n    personId: number;\n    pin: boolean;\n    organization: string;\n    created: string;    \n}\n/**\n * \n */\nexport function useProjectsParam() {\n    const { params, setParams } = useUrlParams([\"name\", \"personId\"])\n    const debounceParam = useDebounce(params)\n    const newParam = useMemo(() => ({\n        ...params,\n        personId: Number(params.personId) || undefined\n    }), [debounceParam])\n\n    return {\n        params: newParam,\n        setParams\n    }\n}\n/**\n * \n */\nexport const useProjects = () => {\n    const http = useHttp()\n    const { params } = useProjectsParam()\n\n    async function getProjects() {\n        const res = await http(API.projects, {\n            data: params\n        })\n        return res\n    }\n\n    return useQuery<IProject[]>([queryKey.projects, params], getProjects)\n}\n/**\n * 编辑project\n */\nexport const useEditProject = () => {\n    const { params } = useProjectsParam()\n    const key = [queryKey.projects, params]\n    const http = useHttp()\n\n    async function editProject(project: Partial<IProject>) {\n        return await http(`${API.projects}/${project.id}`, {\n            method: \"PATCH\",\n            data: project,\n        })\n    }\n    return useMutation(editProject, useEditConfig(key))\n}\n/**\n * 添加project\n */\nexport function useAddProject() {\n    const { params } = useProjectsParam()\n    const key = [queryKey.projects, params]\n    const http = useHttp()\n\n    async function addProject(params: Partial<IProject>) {\n        return await http(API.projects, {\n            method: \"POST\",\n            data: params\n        })\n    }\n    return useMutation(addProject, useAddConfig(key))\n}\n/**\n * 删除project\n */\nexport function useDeleteProject() {\n    const { params } = useProjectsParam()\n    const key = [queryKey.projects, params]\n    const http = useHttp()\n\n    async function deleteProject(params: Partial<IProject>) {\n        return await http(`${API.projects}/${params.id}`, {\n            method: \"DELETE\"\n        })\n    }\n    return useMutation(deleteProject, useDeleteConfig(key))\n}\n","/Users/boyang/code/react/fake-jira/src/tools/list-config.ts",[],"/Users/boyang/code/react/fake-jira/src/hooks/use-params.ts",["145"],"import { useMemo } from \"react\"\nimport { useSearchParams } from \"react-router-dom\"\nimport { cleanObj } from \"tools/utils\"\n\nexport function useUrlParams<KEY extends string>(keys: KEY[]) {\n    const [searchParams, setSearchParams] = useSearchParams()\n    type paramType = {[x in KEY]: string}\n    type InputParam = {[x in KEY]: any}\n\n    const params = useMemo(() => {\n        return keys.reduce((p, key) => {\n            const value = searchParams.get(key)\n            if(value) p[key] = value\n            return p\n        }, {} as paramType)\n    }, [keys, searchParams])\n\n    const setParams = (p: InputParam) => {\n        const o = cleanObj({\n            ...params,\n            ...p\n        }) as paramType\n        setSearchParams(o)\n    }\n\n    return {params, setParams}\n}","/Users/boyang/code/react/fake-jira/src/hooks/use-debounce.ts",["146"],"import { useEffect, useState } from \"react\";\n\nexport function useDebounce<ValueType>(value: ValueType, delay=200 ) {\n    const [res, setRes] = useState(value)\n\n    useEffect(() => {\n        let timer = setTimeout(() => setRes(value), delay)\n        return () => clearTimeout(timer)\n    }, [value])\n\n    return res\n}","/Users/boyang/code/react/fake-jira/src/tools/utils.ts",[],"/Users/boyang/code/react/fake-jira/src/components/select/use-select.ts",[],{"ruleId":"147","replacedBy":"148"},{"ruleId":"149","replacedBy":"150"},{"ruleId":"151","severity":1,"message":"152","line":1,"column":10,"nodeType":"153","messageId":"154","endLine":1,"endColumn":17},{"ruleId":"155","severity":1,"message":"156","line":37,"column":13,"nodeType":"157","endLine":37,"endColumn":56},{"ruleId":"151","severity":1,"message":"158","line":2,"column":31,"nodeType":"153","messageId":"154","endLine":2,"endColumn":38},{"ruleId":"151","severity":1,"message":"152","line":3,"column":14,"nodeType":"153","messageId":"154","endLine":3,"endColumn":21},{"ruleId":"151","severity":1,"message":"159","line":4,"column":14,"nodeType":"153","messageId":"154","endLine":4,"endColumn":23},{"ruleId":"151","severity":1,"message":"160","line":1,"column":10,"nodeType":"153","messageId":"154","endLine":1,"endColumn":18},{"ruleId":"151","severity":1,"message":"161","line":1,"column":10,"nodeType":"153","messageId":"154","endLine":1,"endColumn":14},{"ruleId":"151","severity":1,"message":"159","line":4,"column":14,"nodeType":"153","messageId":"154","endLine":4,"endColumn":23},{"ruleId":"151","severity":1,"message":"162","line":2,"column":23,"nodeType":"153","messageId":"154","endLine":2,"endColumn":31},{"ruleId":"163","severity":1,"message":"164","line":27,"column":9,"nodeType":"165","endLine":27,"endColumn":24,"suggestions":"166"},{"ruleId":"163","severity":1,"message":"167","line":16,"column":8,"nodeType":"165","endLine":16,"endColumn":14,"suggestions":"168"},{"ruleId":"163","severity":1,"message":"169","line":9,"column":8,"nodeType":"165","endLine":9,"endColumn":15,"suggestions":"170"},"no-native-reassign",["171"],"no-negated-in-lhs",["172"],"@typescript-eslint/no-unused-vars","'useMemo' is defined but never used.","Identifier","unusedVar","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","'Divider' is defined but never used.","'useEffect' is defined but never used.","'useTitle' is defined but never used.","'Spin' is defined but never used.","'useState' is defined but never used.","react-hooks/exhaustive-deps","React Hook useMemo has a missing dependency: 'params'. Either include it or remove the dependency array.","ArrayExpression",["173"],"React Hook useMemo has a missing dependency: 'searchParams'. Either include it or remove the dependency array.",["174"],"React Hook useEffect has a missing dependency: 'delay'. Either include it or remove the dependency array.",["175"],"no-global-assign","no-unsafe-negation",{"desc":"176","fix":"177"},{"desc":"178","fix":"179"},{"desc":"180","fix":"181"},"Update the dependencies array to be: [params]",{"range":"182","text":"183"},"Update the dependencies array to be: [keys, searchParams]",{"range":"184","text":"185"},"Update the dependencies array to be: [delay, value]",{"range":"186","text":"187"},[803,818],"[params]",[549,555],"[keys, searchParams]",[289,296],"[delay, value]"]